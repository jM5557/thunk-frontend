{"ast":null,"code":"var _jsxFileName = \"/Users/kyo/React/ThunkMostRecent/src/components/user/Account/Activity.js\";\nimport React, { Component, Fragment } from 'react';\nimport Thoughts from '../../posts/Thoughts';\nimport Comments from '../../../data/comments';\nimport CommentList from '../../comments/CommentList';\nimport axios from 'axios';\nexport default class Activity extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchThoughtData = () => {\n      axios.get(this.state.getUserThought + this.state.userId_).then(response => {\n        const result = response.data;\n        this.setState({\n          myThought_: result\n        });\n      }).catch(err => console.log(err), this.setState({\n        result: \"Not Found\"\n      }));\n      axios.get(this.state.getUserComment + this.state.userId_).then(response => {\n        const result = response.data;\n        this.setState({\n          myComment_: result\n        });\n      }).catch(err => console.log(err), this.setState({\n        result: \"Not Found\"\n      }));\n    };\n\n    this.state = {\n      result: \"\",\n      getUserThought: \"https://thunk-api-19.herokuapp.com/api/v1/thought/user/\",\n      getUserComment: \"https://thunk-api-19.herokuapp.com/api/v1/comment/user/\",\n      myThought_: [],\n      myComment_: [],\n      userId_: 1,\n      view: 'POSTS',\n      hi: [1, 2, 3, 4, 5]\n    };\n    this.changeActivityView = this.changeActivityView.bind(this);\n  }\n\n  changeActivityView(ACTIVITY_VIEW) {\n    this.setState({\n      view: ACTIVITY_VIEW\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"HERE\");\n    this.fetchThoughtData();\n  }\n\n  render() {\n    console.log(this.state.myThought_);\n    console.log(this.state.myComment_);\n    return React.createElement(\"div\", {\n      className: \"activity-page content-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"thoughts-btn\",\n      onClick: () => this.changeActivityView.bind(this, 'POSTS'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Thoughts\"), React.createElement(\"button\", {\n      className: \"comments-btn\",\n      onClick: () => this.changeActivityView.bind(this, 'COMMENTS'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Comments\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.view === 'POSTS' ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.children) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"hi\"), React.createElement(Thoughts, {\n      inputThoughts: this.state.myThought_,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n} // {this.state.view === 'POSTS' ? (\n//   <Fragment>{this.props.children}</Fragment>\n// ) : (\n//   <ThoughtPreview inputThoughts = {this.props.thoughts_}/>\n// )}","map":{"version":3,"sources":["/Users/kyo/React/ThunkMostRecent/src/components/user/Account/Activity.js"],"names":["React","Component","Fragment","Thoughts","Comments","CommentList","axios","Activity","constructor","props","fetchThoughtData","get","state","getUserThought","userId_","then","response","result","data","setState","myThought_","catch","err","console","log","getUserComment","myComment_","view","hi","changeActivityView","bind","ACTIVITY_VIEW","componentDidMount","render","children"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Thoughts from '../../posts/Thoughts';\nimport Comments from '../../../data/comments';\nimport CommentList from '../../comments/CommentList';\nimport axios from 'axios';\n\n\nexport default class Activity extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state =\n    {\n      result : \"\",\n      getUserThought : \"https://thunk-api-19.herokuapp.com/api/v1/thought/user/\",\n      getUserComment :\"https://thunk-api-19.herokuapp.com/api/v1/comment/user/\",\n      myThought_: [],\n      myComment_: [],\n      userId_: 1,\n      view: 'POSTS',\n      hi: [1,2,3,4,5],\n    };\n    this.changeActivityView = this.changeActivityView.bind(this);\n\n  }\n  changeActivityView(ACTIVITY_VIEW) {\n      this.setState({\n        view: ACTIVITY_VIEW\n      });\n    }\n\n  fetchThoughtData = ()=>\n  {\n    axios.get(this.state.getUserThought+this.state.userId_).then(response =>\n    {\n      const result = response.data\n      this.setState({myThought_: result});\n    }).catch(err => console.log(err), this.setState({result: \"Not Found\"}));\n\n    axios.get(this.state.getUserComment+this.state.userId_).then(response =>\n    {\n      const result = response.data\n      this.setState({myComment_: result});\n    }).catch(err => console.log(err), this.setState({result: \"Not Found\"}));\n\n  }\n  componentDidMount()\n  {\n    console.log(\"HERE\");\n    this.fetchThoughtData();\n  }\n\n\n  render() {\n    console.log(this.state.myThought_);\n    console.log(this.state.myComment_);\n\n    return (\n      <div className='activity-page content-page'>\n        <div className='tab-wrapper'>\n          <button\n            className='thoughts-btn'\n            onClick={()=>this.changeActivityView.bind(this, 'POSTS')}\n          >\n            Thoughts\n          </button>\n          <button\n            className='comments-btn'\n            onClick={()=>this.changeActivityView.bind(this, 'COMMENTS')}\n          >\n            Comments\n          </button>\n        </div>\n        <div>\n        {this.state.view === 'POSTS' ? (\n          <Fragment>{this.props.children}</Fragment>\n        ) : (<p>hi</p>\n        )}\n        <Thoughts inputThoughts = {this.state.myThought_}/>\n\n         </div>\n      </div>\n    );\n  }\n}\n// {this.state.view === 'POSTS' ? (\n//   <Fragment>{this.props.children}</Fragment>\n// ) : (\n//   <ThoughtPreview inputThoughts = {this.props.thoughts_}/>\n// )}\n"]},"metadata":{},"sourceType":"module"}